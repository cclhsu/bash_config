#!/usr/bin/env bash
#******************************************************************************

# Copyright 2015 Clark Hsu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#******************************************************************************
# How To
# cp myconfigs_template ${HOME}/.myconfigs

#******************************************************************************
# Mark Off this section if use as lib

# PROGRAM_NAME=$(basename ${0})
# AUTHOR=clark_hsu
# VERSION=0.0.1

#******************************************************************************
# echo -e "\n================================================================================\n"
#echo "Begin: $(basename ${0})"
#set -e # Exit on error On
#set -x # Trace On
#******************************************************************************
# Functions

check_cmd() {
    # which "${1}" 2>/dev/null
    type "${1}" 2>/dev/null
    return $?
}

check_file_exist() {
    test -f "${1}" 2>/dev/null
    return $?
}

check_directory_exist() {
    test -d "${1}" 2>/dev/null
    return $?
}

check_run_state() {
    if [ "${1}" != "0" ]; then
        exit 1
    fi
}

#******************************************************************************

# log() { (>&2 echo ">> ${*}..."); }
# log() { printf -- "$(date +%R) \e[${1}m${*:2}\e[0m\n" | tee -a ${OUTPUT/\/dev\/stdout} ${REPORT:-} >&3; }
# step() { log 32 "${_}" $(basename "${BASH_SOURCE[1]/${BASH_SOURCE}}" | sed 's/.\+/[&]/'); } # print test module
# info() { log 0  "  ${_}"; }
# warn() { log 33 " ${*}"; }
# error() { log 31 "${*}"; }

function section() {
    echo ""
    echo "==============================================================================="
    echo ""
}

function divider() {
    echo ""
    echo "-------------------------------------------------------------------------------"
    echo ""
}

function log_m() {
    section
    echo "[MSG] ${*}"
}

function log_i() {
    echo "[INFO] ${*}"
}

function log_w() {
    echo "[WARNING] ${*}"
}

function log_s() {
    echo "[SUCCESS] ${*}"
}

function log_e() {
    echo "[ERROR] ${*}"
}

function log_a() {
    echo "[CMD] ${*}"
    "${*}"
}

function msg() {
    echo -e "\n>> ${*}...\n"
}

#******************************************************************************
# Source

MYHOME=${HOME}/Documents # [ ${HOME} | ${HOME}/Documents ]
OS_TYPE=                 # macos | opensuse | centos | ubuntu

CLOUD_DRIVE_NAME=remote
# CLOUD_DRIVE_NAME=googledrive
DOCUMENTS_PATH=${HOME}/Documents
GOOGLE_DRIVE_PATH="${HOME}/Google Drive"
if [ "${OS_TYPE}" == "macos" ]; then
    CLOUD_REPLICA_PATH=${GOOGLE_DRIVE_PATH}
else
    CLOUD_REPLICA_PATH=${HOME}/GoogleDriveCopy
fi
CLOUD_MOUNT_PATH=${HOME}/GoogleDriveMount

UTILS_HOME=my_utils
HOME_DIR=${HOME}/.${UTILS_HOME}

[[ -d "${HOME_DIR}" ]] || mkdir "${HOME_DIR}"
cd "${HOME_DIR}"

SCRIPT_DIR=$(basename "${0}")
SCRIPT_DIR=${SCRIPT_DIR/.sh/}

# echo "Utilies Home: ${HOME_DIR}"
# echo "Script Home: ${SCRIPT_DIR}"

[[ -d "${SCRIPT_DIR}" ]] || mkdir "${SCRIPT_DIR}"
cd "${SCRIPT_DIR}"

if [ -e "${HOME}/.bashrc" ]; then
    source ${HOME}/.bashrc
fi

#******************************************************************************
#set +e # Exit on error Off
#set +x # Trace Off
#echo "End: $(basename ${0})"
# echo -e "\n================================================================================\n"
# exit 0
#******************************************************************************
